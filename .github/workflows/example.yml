# This is a basic workflow to help you get started with Actions

name: Self-service Maintenance Page

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (DEV, TEST, QA or PROD)'
        required: true
        default: 'DEV'
      application:
        description: 'Application (CRM or CUST360)'
        required: true
      on_off_maintenance_page:
        description: 'Turn maintenance page on/off (ON or OFF)'
        required: true
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # TODO: Use regex here for one liner?
      - name: Check the Environment variable is valid
        run: |
          if ! [[ ${{ github.event.inputs.environment }} =~ ^(prod|qa|test|dev)$ ]]; then
            echo "Please enter a valid Environment (dev, test, qa or prod) name. The value you entered, ${{ github.event.inputs.environment }} is not valid."
            exit 1
          fi
          
      # TODO: Use regex here for one liner?
      - if: | 
          ${{ github.event.inputs.application }} != "CRM" && 
          ${{ github.event.inputs.application }} != "CUST360" 
        name: Check the Application variable is valid
        run: |
          echo "Please enter a valid Application (CRM or CUST360) name. The value you entered, ${{ github.event.inputs.application }} is not valid."
          exit 1
      
      # TODO: Use regex here for one liner?
      - if: | 
          ${{ github.event.inputs.on_off_maintenance_page }} != "ON" && 
          ${{ github.event.inputs.on_off_maintenance_page }} != "OFF" 
        name: Check the Application variable is valid
        run: |
          echo "Please enter a valid Maintenance Page (ON or OFF) option . The value you entered, ${{ github.event.inputs.on_off_maintenance_page }} is not valid."
          exit 1
  
      # TODO: These blocks are ugly, but variable interpolation isn't working as expected.
      - if: ${{ github.event.inputs.environment }} == "PROD"
        name:  from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          
      - if: ${{ github.event.inputs.environment }} == "QA"
        name:  from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.QA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          
      - if: ${{ github.event.inputs.environment }} == "TEST"
        name:  from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      - if: ${{ github.event.inputs.environment }} == "DEV" 
        name:  from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          
      - name: Test arrays
        run: |
          declare -A DEV_CLOUDFRONT_DIST_ID=( ["CRM"]="E3X8VEW3S9TQQ" ["CUST360"]="E696HHVMKMNGJ")
          echo ${DEV_CLOUDFRONT_DIST_ID[${{ github.event.inputs.application }}]}
          #echo ${{ github.event.inputs.environment }}_CLOUDFRONT_DIST_ID
        
      - name: Temp exit
        run: echo "Lets exit here as no need to run the rest" && exit 0
          
      - name: Toggle maintenance page
        run: |
          declare -A DEV_CLOUDFRONT_DIST_ID=( ["CRM"]="E3X8VEW3S9TQQ" ["CUST360"]="E696HHVMKMNGJ")
          
          echo $CLOUDFRONT_DIST_ID
          PAYLOAD=`aws cloudfront get-distribution-config --id $CLOUDFRONT_DIST_ID`
          ETAG=`echo ${PAYLOAD} | jq -r '.ETag'`
          echo $ETAG
          PAYLOAD=`echo ${PAYLOAD} | jq 'del(.ETag)' | jq '.DistributionConfig' | jq --arg PATHPATTERN "$PATHPATTERN" '.CacheBehaviors.Items[0].PathPattern = $PATHPATTERN'`
          echo $PAYLOAD > /tmp/${ID}.json
          aws cloudfront update-distribution --distribution-config file:///tmp/${ID}.json --id ${CLOUDFRONT_DIST_ID} --if-match $ETAG
          cat  /tmp/${ID}.json
        env:
          CLOUDFRONT_DIST_ID: E1BVEKRQF20RNI
          PATHPATTERN: "*"

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
